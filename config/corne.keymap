/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
};

/ {
    combos {
        compatible = "zmk,combos";

        activatelayer3 {
            bindings = <&mo 3>;
            key-positions = <38 39 37>;
        };
    };

    behaviors {
        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E       &kp R                &kp T                          &kp Y  &kp U        &kp I       &kp O    &kp P     &mt RA(BACKSPACE) BACKSPACE
&kp ESC    &kp A  &kp S  &hm LALT D  &hm LGUI F           &kp G                          &kp H  &hm RGUI J   &hm RALT K  &kp L    &kp SEMI  &kp ENTER
&kp LSHFT  &kp Z  &kp X  &kp C       &kp V                &kp B                          &kp N  &kp M        &kp COMMA   &kp DOT  &kp FSLH  &mo 2
                         &sk LCTRL   &mt LG(SPACE) SPACE  &mt LC(LS(LALT)) LEFT_SHIFT    &to 2  &lt 1 ENTER  &kp RALT
            >;
        };

        num_nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1  &kp N2            &kp N3      &kp N4      &kp N5      &kp N6   &kp N7             &kp N8           &kp N9       &kp N0               &mt LA(BACKSPACE) BACKSPACE
&kp ESC    &none   &kp C_PLAY_PAUSE  &kp C_PREV  &kp C_NEXT  &kp PLUS    &none    &mt RA(LEFT) LEFT  &kp DOWN         &kp UP       &mt RA(RIGHT) RIGHT  &kp C_VOLUME_UP
&kp LSHFT  &none   &none             &none       &none       &none       &none    &kp LG(LBKT)       &kp LC(LS(TAB))  &kp RC(TAB)  &kp LG(RBKT)         &kp C_VOLUME_DOWN
                                     &to 0       &kp SPACE   &kp LGUI    &kp RET  &tog 1             &none
            >;
        };

        symbol {
            bindings = <
&kp GRAVE  &kp EXCLAMATION    &kp AT        &kp HASH  &td LC(LG(LS(N4))) DOLLAR  &kp PERCENT        &kp CARET      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp SLASH  &kp BACKSLASH   &kp BACKSPACE
&kp TILDE  &kp SQT            &kp ASTERISK  &kp PLUS  &kp EQUAL                  &kp EXCLAMATION    &kp AMPERSAND  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS  &kp UNDERSCORE  &kp ENTER
&none      &kp DOUBLE_QUOTES  &none         &none     &none                      &none              &kp PIPE       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &none      &kp QUESTION    &none
                                            &trans    &to 0                      &sk LEFT_SHIFT     &to 1          &trans                &sk RALT
            >;
        };

        bluetooth {
            bindings = <
&none       &none  &none  &none  &none         &none           &none  &none  &none  &none  &none  &none
&none       &none  &none  &none  &none         &none           &none  &none  &none  &none  &none  &none
&bt BT_CLR  &none  &none  &none  &bt BT_SEL 0  &bt BT_SEL 1    &none  &none  &none  &none  &none  &none
                          &none  &none         &none           &none  &none  &none
            >;
        };
    };
};
